[Q] How many heads of the departments are older than 56 ?
[A] SELECT COUNT(*) FROM head WHERE age > 56

[Q] List the name, born state and age of the heads of departments ordered by age.
[A] SELECT name, born_state, age FROM head ORDER BY age

[Q] List the creation year, name and budget of each department.
[A] SELECT creation, name, budget_in_billions FROM department

[Q] What are the maximum and minimum budget of the departments?
[A] SELECT MAX(budget_in_billions), MIN(budget_in_billions) FROM department

[Q] What is the average number of employees of the departments whose rank is between 10 and 15?
[A] SELECT AVG(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15

[Q] What are the names of the heads who are born outside the California state?
[A] SELECT name FROM head WHERE born_state <> 'California'

[Q] What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?
[A] SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama'

[Q] What are the names of the states where at least 3 heads were born?
[A] SELECT born_state FROM head GROUP BY born_state HAVING COUNT(*) >= 3

[Q] In which year were most departments established?
[A] SELECT creation FROM department GROUP BY creation ORDER BY COUNT(*) DESC LIMIT 1

[Q] Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?
[A] SELECT T1.name, T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'

[Q] How many acting statuses are there?
[A] SELECT COUNT(DISTINCT temporary_acting) FROM management

[Q] How many departments are led by heads who are not mentioned?
[A] SELECT COUNT(*) FROM department WHERE NOT department_id IN (SELECT department_id FROM management)

[Q] What are the distinct ages of the heads who are acting?
[A] SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes'

[Q] List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.
[A] SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'

[Q] Which department has more than 1 head at a time? List the id, name and the number of heads.
[A] SELECT T1.department_id, T1.name, COUNT(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING COUNT(*) > 1

[Q] Which head's name has the substring 'Ha'? List the id and name.
[A] SELECT head_id, name FROM head WHERE name LIKE '%Ha%'

[Q] How many farms are there?
[A] SELECT COUNT(*) FROM farm

[Q] List the total number of horses on farms in ascending order.
[A] SELECT Total_Horses FROM farm ORDER BY Total_Horses

[Q] What are the hosts of competitions whose theme is not "Aliens"?
[A] SELECT Hosts FROM farm_competition WHERE Theme <> 'Aliens'

[Q] What are the themes of farm competitions sorted by year in ascending order?
[A] SELECT Theme FROM farm_competition ORDER BY YEAR

[Q] What is the average number of working horses of farms with more than 5000 total number of horses?
[A] SELECT AVG(Working_Horses) FROM farm WHERE Total_Horses > 5000

[Q] What are the maximum and minimum number of cows across all farms.
[A] SELECT MAX(Cows), MIN(Cows) FROM farm

[Q] How many different statuses do cities have?
[A] SELECT COUNT(DISTINCT Status) FROM city

[Q] List official names of cities in descending order of population.
[A] SELECT Official_Name FROM city ORDER BY Population DESC

[Q] List the official name and status of the city with the largest population.
[A] SELECT Official_Name, Status FROM city ORDER BY Population DESC LIMIT 1

[Q] Show the years and the official names of the host cities of competitions.
[A] SELECT T2.Year, T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID

[Q] Show the official names of the cities that have hosted more than one competition.
[A] SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*) > 1

[Q] Show the status of the city that has hosted the greatest number of competitions.
[A] SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1

[Q] Please show the themes of competitions with host cities having populations larger than 1000.
[A] SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000

[Q] Please show the different statuses of cities and the average population of cities with each status.
[A] SELECT Status, AVG(Population) FROM city GROUP BY Status

[Q] Please show the different statuses, ordered by the number of cities that have each.
[A] SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*)

[Q] List the most common type of Status across cities.
[A] SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1

[Q] List the official names of cities that have not held any competition.
[A] SELECT Official_Name FROM city WHERE NOT City_ID IN (SELECT Host_city_ID FROM farm_competition)

[Q] Show the status shared by cities with population bigger than 1500 and smaller than 500.
[A] SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500

[Q] Find the official names of cities with population bigger than 1500 or smaller than 500.
[A] SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500

[Q] Show the census ranking of cities whose status are not "Village".
[A] SELECT Census_Ranking FROM city WHERE Status <> "Village"

[Q] which course has most number of registered students?
[A] SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1

[Q] what is id of students who registered some courses but the least number of courses in these students?
[A] SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY COUNT(*) LIMIT 1

[Q] what are the first name and last name of all candidates?
[A] SELECT T2.first_name, T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id

[Q] List the id of students who never attends courses?
[A] SELECT student_id FROM students WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance)

[Q] List the id of students who attended some courses?
[A] SELECT student_id FROM student_course_attendance

[Q] What are the ids of all students for courses and what are the names of those courses?
[A] SELECT T1.student_id, T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id

[Q] What is detail of the student who most recently registered course?
[A] SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1

[Q] How many students attend course English?
[A] SELECT COUNT(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "English"

[Q] How many courses do the student whose id is 171 attend?
[A] SELECT COUNT(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171

[Q] Find id of the candidate whose email is stanley.monahan@example.org?
[A] SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = "stanley.monahan@example.org"

[Q] Find id of the candidate who most recently accessed the course?
[A] SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1

[Q] What is detail of the student who registered the most number of courses?
[A] SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1

[Q] List the id of students who registered some courses and the number of their registered courses?
[A] SELECT T1.student_id, COUNT(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id

[Q] How many registed students do each course have? List course name and the number of their registered students?
[A] SELECT T3.course_name, COUNT(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id

[Q] Find id of candidates whose assessment code is "Pass"?
[A] SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = "Pass"

[Q] Find the cell mobile number of the candidates whose assessment code is "Fail"?
[A] SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = "Fail"

[Q] What are the id of students who registered course 301?
[A] SELECT student_id FROM student_course_attendance WHERE course_id = 301

[Q] What is the id of the student who most recently registered course 301?
[A] SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1

[Q] Find distinct cities of addresses of people?
[A] SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id

[Q] Find distinct cities of address of students?
[A] SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id

[Q] List the names of courses in alphabetical order?
[A] SELECT course_name FROM courses ORDER BY course_name

[Q] List the first names of people in alphabetical order?
[A] SELECT first_name FROM people ORDER BY first_name

[Q] What are the id of students who registered courses or attended courses?
[A] SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance

[Q] Find the id of courses which are registered or attended by student whose id is 121?
[A] SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121

[Q] What are all info of students who registered courses but not attended courses?
[A] SELECT * FROM student_course_registrations WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance)

[Q] List the id of students who registered course statistics in the order of registration date.
[A] SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "statistics" ORDER BY T2.registration_date

[Q] List the id of students who attended  statistics courses in the order of attendance date.
[A] SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "statistics" ORDER BY T2.date_of_attendance

[Q] Give me the dates when the max temperature was higher than 85.
[A] SELECT date FROM weather WHERE max_temperature_f > 85

[Q] What are the names of stations that have latitude lower than 37.5?
[A] SELECT name FROM station WHERE lat < 37.5

[Q] For each city, return the highest latitude among its stations.
[A] SELECT city, MAX(lat) FROM station GROUP BY city

[Q] Give me the start station and end station for the trips with the three oldest id.
[A] SELECT start_station_name, end_station_name FROM trip ORDER BY id LIMIT 3

[Q] What is the average latitude and longitude of stations located in San Jose city?
[A] SELECT AVG(lat), AVG(long) FROM station WHERE city = "San Jose"

[Q] What is the id of the trip that has the shortest duration?
[A] SELECT id FROM trip ORDER BY duration LIMIT 1

[Q] What is the total and maximum duration of trips with bike id 636?
[A] SELECT SUM(duration), MAX(duration) FROM trip WHERE bike_id = 636

[Q] For each zip code, return the average mean temperature of August there.
[A] SELECT zip_code, AVG(mean_temperature_f) FROM weather WHERE date LIKE "8/%" GROUP BY zip_code

[Q] From the trip record, find the number of unique bikes.
[A] SELECT COUNT(DISTINCT bike_id) FROM trip

[Q] What is the number of distinct cities the stations are located at?
[A] SELECT COUNT(DISTINCT city) FROM station

[Q] How many stations does Mountain View city has?
[A] SELECT COUNT(*) FROM station WHERE city = "Mountain View"

[Q] Return the unique name for stations that have ever had 7 bikes available.
[A] SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available = 7

[Q] Which start station had the most trips starting from August? Give me the name and id of the station.
[A] SELECT start_station_name, start_station_id FROM trip WHERE start_date LIKE "8/%" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1

[Q] Which bike traveled the most often in zip code 94002?
[A] SELECT bike_id FROM trip WHERE zip_code = 94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1

[Q] How many days had both mean humidity above 50 and mean visibility above 8?
[A] SELECT COUNT(*) FROM weather WHERE mean_humidity > 50 AND mean_visibility_miles > 8

[Q] What is the latitude, longitude, city of the station from which the shortest trip started?
[A] SELECT T1.lat, T1.long, T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id ORDER BY T2.duration LIMIT 1

[Q] What are the ids of stations that are located in San Francisco and have average bike availability above 10.
[A] SELECT id FROM station WHERE city = "San Francisco" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING AVG(bikes_available) > 10

[Q] What are the names and ids of stations that had more than 14 bikes available on average or were installed in December?
[A] SELECT T1.name, T1.id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING AVG(T2.bikes_available) > 14 UNION SELECT name, id FROM station WHERE installation_date LIKE "12/%"

[Q] What is the 3 most common cloud cover rates in the region of zip code 94107?
[A] SELECT cloud_cover FROM weather WHERE zip_code = 94107 GROUP BY cloud_cover ORDER BY COUNT(*) DESC LIMIT 3

[Q] What is the zip code in which the average mean sea level pressure is the lowest?
[A] SELECT zip_code FROM weather GROUP BY zip_code ORDER BY AVG(mean_sea_level_pressure_inches) LIMIT 1

[Q] What is the average bike availability in stations that are not located in Palo Alto?
[A] SELECT AVG(bikes_available) FROM status WHERE NOT station_id IN (SELECT id FROM station WHERE city = "Palo Alto")

[Q] What is the average longitude of stations that never had bike availability more than 10?
[A] SELECT AVG(long) FROM station WHERE NOT id IN (SELECT station_id FROM status GROUP BY station_id HAVING MAX(bikes_available) > 10)

[Q] When and in what zip code did max temperature reach 80?
[A] SELECT date, zip_code FROM weather WHERE max_temperature_f >= 80

[Q] Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.
[A] SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.zip_code HAVING AVG(T2.mean_temperature_f) > 60

[Q] For each zip code, return how many times max wind speed reached 25?
[A] SELECT zip_code, COUNT(*) FROM weather WHERE max_wind_Speed_mph >= 25 GROUP BY zip_code

[Q] On which day and in which zip code was the min dew point lower than any day in zip code 94107?
[A] SELECT date, zip_code FROM weather WHERE min_dew_point_f < (SELECT MIN(min_dew_point_f) FROM weather WHERE zip_code = 94107)

[Q] For each trip, return its ending station's installation date.
[A] SELECT T1.id, T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id

[Q] Which trip started from the station with the largest dock count? Give me the trip id.
[A] SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id = T2.id ORDER BY T2.dock_count DESC LIMIT 1

[Q] Count the number of trips that did not end in San Francisco city.
[A] SELECT COUNT(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city <> "San Francisco"

[Q] In zip code 94107, on which day neither Fog nor Rain was not observed?
[A] SELECT date FROM weather WHERE zip_code = 94107 AND EVENTS <> "Fog" AND EVENTS <> "Rain"

[Q] What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?
[A] SELECT id FROM station WHERE lat > 37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING MIN(bikes_available) < 7

[Q] What are names of stations that have average bike availability above 10 and are not located in San Jose city?
[A] SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING AVG(bikes_available) > 10 EXCEPT SELECT name FROM station WHERE city = "San Jose"

[Q] What are the name, latitude, and city of the station with the lowest latitude?
[A] SELECT name, lat, city FROM station ORDER BY lat LIMIT 1

[Q] What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?
[A] SELECT date, mean_temperature_f, mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3

[Q] List the name and the number of stations for all the cities that have at least 15 stations.
[A] SELECT city, COUNT(*) FROM station GROUP BY city HAVING COUNT(*) >= 15

[Q] Find the ids and names of stations from which at least 200 trips started.
[A] SELECT start_station_id, start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*) >= 200

[Q] Find the zip code in which the average mean visibility is lower than 10.
[A] SELECT zip_code FROM weather GROUP BY zip_code HAVING AVG(mean_visibility_miles) < 10

[Q] List all the cities in a decreasing order of each city's stations' highest latitude.
[A] SELECT city FROM station GROUP BY city ORDER BY MAX(lat) DESC

[Q] What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.
[A] SELECT date, cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5

[Q] What are the ids and durations of the trips with the top 3 durations?
[A] SELECT id, duration FROM trip ORDER BY duration DESC LIMIT 3

[Q] For each station, return its longitude and the average duration of trips that started from the station.
[A] SELECT T1.name, T1.long, AVG(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id

[Q] For each station, find its latitude and the minimum duration of trips that ended at the station.
[A] SELECT T1.name, T1.lat, MIN(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY T2.end_station_id

[Q] List all the distinct stations from which a trip of duration below 100 started.
[A] SELECT DISTINCT start_station_name FROM trip WHERE duration < 100

[Q] Find all the zip codes in which the max dew point have never reached 70.
[A] SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f >= 70

[Q] Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103.
[A] SELECT id FROM trip WHERE duration >= (SELECT AVG(duration) FROM trip WHERE zip_code = 94103)

[Q] What are the dates in which the mean sea level pressure was between 30.3 and 31?
[A] SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31

[Q] Find the day in which the difference between the max temperature and min temperature was the smallest. Also report the difference.
[A] SELECT date, max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1

[Q] What are the id and name of the stations that have ever had more than 12 bikes available?
[A] SELECT DISTINCT T1.id, T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12

[Q] Give me the zip code where the average mean humidity is below 70 and at least 100 trips took place.
[A] SELECT zip_code FROM weather GROUP BY zip_code HAVING AVG(mean_humidity) < 70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING COUNT(*) >= 100

[Q] What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times?
[A] SELECT name FROM station WHERE city = "Palo Alto" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING COUNT(*) > 100

[Q] How many trips started from Mountain View city and ended at Palo Alto city?
[A] SELECT COUNT(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id = T2.start_station_id AND T2.id = T4.id AND T3.id = T4.end_station_id WHERE T1.city = "Mountain View" AND T3.city = "Palo Alto"

[Q] What is the average latitude and longitude of the starting points of all trips?
[A] SELECT AVG(T1.lat), AVG(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id

[Q] How many books are there?
[A] SELECT COUNT(*) FROM book

[Q] List the writers of the books in ascending alphabetical order.
[A] SELECT Writer FROM book ORDER BY Writer

[Q] List the titles of the books in ascending order of issues.
[A] SELECT Title FROM book ORDER BY Issues

[Q] What are the titles of the books whose writer is not "Elaine Lee"?
[A] SELECT Title FROM book WHERE Writer <> "Elaine Lee"

[Q] What are the title and issues of the books?
[A] SELECT Title, Issues FROM book

[Q] What are the dates of publications in descending order of price?
[A] SELECT Publication_Date FROM publication ORDER BY Price DESC

[Q] What are the distinct publishers of publications with price higher than 5000000?
[A] SELECT DISTINCT Publisher FROM publication WHERE Price > 5000000

[Q] List the publisher of the publication with the highest price.
[A] SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1

[Q] List the publication dates of publications with 3 lowest prices.
[A] SELECT Publication_Date FROM publication ORDER BY Price LIMIT 3

[Q] Show the title and publication dates of books.
[A] SELECT T1.Title, T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID

[Q] Show writers who have published a book with price more than 4000000.
[A] SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 4000000

[Q] Show the titles of books in descending order of publication price.
[A] SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID ORDER BY T2.Price DESC

[Q] Show publishers that have more than one publication.
[A] SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*) > 1

[Q] Show different publishers together with the number of publications they have.
[A] SELECT Publisher, COUNT(*) FROM publication GROUP BY Publisher

[Q] Please show the most common publication date.
[A] SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1

[Q] List the writers who have written more than one book.
[A] SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*) > 1

[Q] List the titles of books that are not published.
[A] SELECT Title FROM book WHERE NOT Book_ID IN (SELECT Book_ID FROM publication)

[Q] Show the publishers that have publications with price higher than 10000000 and publications with price lower than 5000000.
[A] SELECT Publisher FROM publication WHERE Price > 10000000 INTERSECT SELECT Publisher FROM publication WHERE Price < 5000000

[Q] What is the number of distinct publication dates?
[A] SELECT COUNT(DISTINCT Publication_Date) FROM publication

[Q] Show the prices of publications whose publisher is either "Person" or "Wiley"
[A] SELECT Price FROM publication WHERE Publisher = "Person" OR Publisher = "Wiley"

[Q] How many actors are there?
[A] SELECT COUNT(*) FROM actor

[Q] List the name of actors in ascending alphabetical order.
[A] SELECT Name FROM actor ORDER BY Name

[Q] What are the characters and duration of actors?
[A] SELECT Character, Duration FROM actor

[Q] List the name of actors whose age is not 20.
[A] SELECT Name FROM actor WHERE Age <> 20

[Q] What are the characters of actors in descending order of age?
[A] SELECT Character FROM actor ORDER BY age DESC

[Q] What is the duration of the oldest actor?
[A] SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1

[Q] What are the names of musicals with nominee "Bob Fosse"?
[A] SELECT Name FROM musical WHERE Nominee = "Bob Fosse"

[Q] What are the distinct nominees of the musicals with the award that is not "Tony Award"?
[A] SELECT DISTINCT Nominee FROM musical WHERE Award <> "Tony Award"

[Q] Show names of actors and names of musicals they are in.
[A] SELECT T1.Name, T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID

[Q] Show names of actors that have appeared in musical with name "The Phantom of the Opera".
[A] SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = "The Phantom of the Opera"

[Q] Show names of actors in descending order of the year their musical is awarded.
[A] SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC

[Q] Show names of musicals and the number of actors who have appeared in the musicals.
[A] SELECT T2.Name, COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID

[Q] Show names of musicals which have at least three actors.
[A] SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*) >= 3

[Q] Show different nominees and the number of musicals they have been nominated.
[A] SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee

[Q] Please show the nominee who has been nominated the greatest number of times.
[A] SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1

[Q] List the most common result of the musicals.
[A] SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1

[Q] List the nominees that have been nominated more than two musicals.
[A] SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*) > 2

[Q] List the name of musicals that do not have actors.
[A] SELECT Name FROM musical WHERE NOT Musical_ID IN (SELECT Musical_ID FROM actor)

[Q] Show the nominees that have nominated musicals for both "Tony Award" and "Drama Desk Award".
[A] SELECT Nominee FROM musical WHERE Award = "Tony Award" INTERSECT SELECT Nominee FROM musical WHERE Award = "Drama Desk Award"

[Q] Show the musical nominee with award "Bob Fosse" or "Cleavant Derricks".
[A] SELECT Nominee FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks"

[Q] Find the emails of the user named "Mary".
[A] SELECT email FROM user_profiles WHERE name = 'Mary'

[Q] What is the partition id of the user named "Iron Man".
[A] SELECT partitionid FROM user_profiles WHERE name = 'Iron Man'

[Q] How many users are there?
[A] SELECT COUNT(*) FROM user_profiles

[Q] How many followers does each user have?
[A] SELECT COUNT(*) FROM follows

[Q] Find the number of followers for each user.
[A] SELECT COUNT(*) FROM follows GROUP BY f1

[Q] Find the number of tweets in record.
[A] SELECT COUNT(*) FROM tweets

[Q] Find the number of users who posted some tweets.
[A] SELECT COUNT(DISTINCT UID) FROM tweets

[Q] Find the name and email of the user whose name contains the word ‘Swift’.
[A] SELECT name, email FROM user_profiles WHERE name LIKE '%Swift%'

[Q] Find the names of users whose emails contain ‘superstar’ or ‘edu’.
[A] SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'

[Q] Return the text of tweets about the topic 'intern'.
[A] SELECT text FROM tweets WHERE text LIKE '%intern%'

[Q] Find the name and email of the users who have more than 1000 followers.
[A] SELECT name, email FROM user_profiles WHERE followers > 1000

[Q] Find the names of the users whose number of followers is greater than that of the user named "Tyler Swift".
[A] SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING COUNT(*) > (SELECT COUNT(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 WHERE T1.name = 'Tyler Swift')

[Q] Find the name and email for the users who have more than one follower.
[A] SELECT T1.name, T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING COUNT(*) > 1

[Q] Find the names of users who have more than one tweet.
[A] SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING COUNT(*) > 1

[Q] Find the id of users who are followed by Mary and Susan.
[A] SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Susan"

[Q] Find the id of users who are followed by Mary or Susan.
[A] SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary" OR T1.name = "Susan"

[Q] Find the name of the user who has the largest number of followers.
[A] SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1

[Q] Find the name and email of the user followed by the least number of people.
[A] SELECT name, email FROM user_profiles ORDER BY followers LIMIT 1

[Q] List the name and number of followers for each user, and sort the results by the number of followers in descending order.
[A] SELECT name, followers FROM user_profiles ORDER BY followers DESC

[Q] List the names of 5 users followed by the largest number of other users.
[A] SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5

[Q] List the text of all tweets in the order of date.
[A] SELECT text FROM tweets ORDER BY createdate

[Q] Find the name of each user and number of tweets tweeted by each of them.
[A] SELECT T1.name, COUNT(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid

[Q] Find the name and partition id for users who tweeted less than twice.
[A] SELECT T1.name, T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING COUNT(*) < 2

[Q] Find the name of the user who tweeted more than once, and number of tweets tweeted by them.
[A] SELECT T1.name, COUNT(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING COUNT(*) > 1

[Q] Find the average number of followers for the users who do not have any tweet.
[A] SELECT AVG(followers) FROM user_profiles WHERE NOT UID IN (SELECT UID FROM tweets)

[Q] Find the average number of followers for the users who had some tweets.
[A] SELECT AVG(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)

[Q] Find the maximum and total number of followers of all users.
[A] SELECT MAX(followers), SUM(followers) FROM user_profiles

[Q] Find the names of all the catalog entries.
[A] SELECT DISTINCT (catalog_entry_name) FROM catalog_contents

[Q] Find the list of attribute data types possessed by more than 3 attribute definitions.
[A] SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING COUNT(*) > 3

[Q] What is the attribute data type of the attribute with name "Green"?
[A] SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name = "Green"

[Q] Find the name and level of catalog structure with level between 5 and 10.
[A] SELECT catalog_level_name, catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10

[Q] Find all the catalog publishers whose name contains "Murray"
[A] SELECT DISTINCT (catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE "%Murray%"

[Q] Which catalog publisher has published the most catalogs?
[A] SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY COUNT(*) DESC LIMIT 1

[Q] Find the names and publication dates of all catalogs that have catalog level number greater than 5.
[A] SELECT t1.catalog_name, t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5

[Q] What are the entry names of catalog with the attribute possessed by most entries.
[A] SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value = (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY COUNT(*) DESC LIMIT 1)

[Q] What is the entry name of the most expensive catalog (in USD)?
[A] SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1

[Q] What is the level name of the cheapest catalog (in USD)?
[A] SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number = t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1

[Q] What are the average and minimum price (in Euro) of all products?
[A] SELECT AVG(price_in_euros), MIN(price_in_euros) FROM catalog_contents

[Q] What is the product with the highest height? Give me the catalog entry name.
[A] SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1

[Q] Find the name of the product that has the smallest capacity.
[A] SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity LIMIT 1

[Q] Find the names of all the products whose stock number starts with "2".
[A] SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE "2%"

[Q] Find the names of catalog entries with level number 8.
[A] SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = "8"

[Q] Find the names of the products with length smaller than 3 or height greater than 5.
[A] SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5

[Q] Find the name and attribute ID of the attribute definitions with attribute value 0.
[A] SELECT t1.attribute_name, t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0

[Q] Find the name and capacity of products with price greater than 700 (in USD).
[A] SELECT catalog_entry_name, capacity FROM Catalog_Contents WHERE price_in_dollars > 700

[Q] Find the dates on which more than one revisions were made.
[A] SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING COUNT(*) > 1

[Q] How many products are there in the records?
[A] SELECT COUNT(*) FROM catalog_contents

[Q] Name all the products with next entry ID greater than 8.
[A] SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > 8

[Q] How many aircrafts do we have?
[A] SELECT COUNT(*) FROM Aircraft

[Q] Show name and distance for all aircrafts.
[A] SELECT name, distance FROM Aircraft

[Q] Show ids for all aircrafts with more than 1000 distance.
[A] SELECT aid FROM Aircraft WHERE distance > 1000

[Q] How many aircrafts have distance between 1000 and 5000?
[A] SELECT COUNT(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000

[Q] What is the name and distance for aircraft with id 12?
[A] SELECT name, distance FROM Aircraft WHERE aid = 12

[Q] What is the minimum, average, and maximum distance of all aircrafts.
[A] SELECT MIN(distance), AVG(distance), MAX(distance) FROM Aircraft

[Q] Show the id and name of the aircraft with the maximum distance.
[A] SELECT aid, name FROM Aircraft ORDER BY distance DESC LIMIT 1

[Q] Show the name of aircrafts with top three lowest distances.
[A] SELECT name FROM Aircraft ORDER BY distance LIMIT 3

[Q] Show names for all aircrafts with distances more than the average.
[A] SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)

[Q] How many employees do we have?
[A] SELECT COUNT(*) FROM Employee

[Q] Show name and salary for all employees sorted by salary.
[A] SELECT name, salary FROM Employee ORDER BY salary

[Q] Show ids for all employees with at least 100000 salary.
[A] SELECT eid FROM Employee WHERE salary > 100000

[Q] How many employees have salary between 100000 and 200000?
[A] SELECT COUNT(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000

[Q] What is the name and salary for employee with id 242518965?
[A] SELECT name, salary FROM Employee WHERE eid = 242518965

[Q] What is average and maximum salary of all employees.
[A] SELECT AVG(salary), MAX(salary) FROM Employee

[Q] Show the id and name of the employee with maximum salary.
[A] SELECT eid, name FROM Employee ORDER BY salary DESC LIMIT 1

[Q] Show the name of employees with three lowest salaries.
[A] SELECT name FROM Employee ORDER BY salary LIMIT 3

[Q] Show names for all employees with salary more than the average.
[A] SELECT name FROM Employee WHERE salary > (SELECT AVG(salary) FROM Employee)

[Q] Show the id and salary of Mark Young.
[A] SELECT eid, salary FROM Employee WHERE name = 'Mark Young'

[Q] How many flights do we have?
[A] SELECT COUNT(*) FROM Flight

[Q] Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.
[A] SELECT flno, origin, destination FROM Flight ORDER BY origin

[Q] Show all flight number from Los Angeles.
[A] SELECT flno FROM Flight WHERE origin = "Los Angeles"

[Q] Show origins of all flights with destination Honolulu.
[A] SELECT origin FROM Flight WHERE destination = "Honolulu"

[Q] Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.
[A] SELECT departure_date, arrival_date FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"

[Q] Show flight number for all flights with more than 2000 distance.
[A] SELECT flno FROM Flight WHERE distance > 2000

[Q] What is the average price for flights from Los Angeles to Honolulu.
[A] SELECT AVG(price) FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"

[Q] Show origin and destination for flights with price higher than 300.
[A] SELECT origin, destination FROM Flight WHERE price > 300

[Q] Show the flight number and distance of the flight with maximum price.
[A] SELECT flno, distance FROM Flight ORDER BY price DESC LIMIT 1

[Q] Show the flight number of flights with three lowest distances.
[A] SELECT flno FROM Flight ORDER BY distance LIMIT 3

[Q] What is the average distance and average price for flights from Los Angeles.
[A] SELECT AVG(distance), AVG(price) FROM Flight WHERE origin = "Los Angeles"

[Q] Show all origins and the number of flights from each origin.
[A] SELECT origin, COUNT(*) FROM Flight GROUP BY origin

[Q] Show all destinations and the number of flights to each destination.
[A] SELECT destination, COUNT(*) FROM Flight GROUP BY destination

[Q] Which origin has most number of flights?
[A] SELECT origin FROM Flight GROUP BY origin ORDER BY COUNT(*) DESC LIMIT 1

[Q] Which destination has least number of flights?
[A] SELECT destination FROM Flight GROUP BY destination ORDER BY COUNT(*) LIMIT 1

[Q] What is the aircraft name for the flight with number 99
[A] SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99

[Q] Show all flight numbers with aircraft Airbus A340-300.
[A] SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = "Airbus A340-300"

[Q] Show aircraft names and number of flights for each aircraft.
[A] SELECT T2.name, COUNT(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid

[Q] Show names for all aircraft with at least two flights.
[A] SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING COUNT(*) >= 2

[Q] How many employees have certificate.
[A] SELECT COUNT(DISTINCT eid) FROM Certificate

[Q] Show ids for all employees who don't have a certificate.
[A] SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate

[Q] Show names for all aircrafts of which John Williams has certificates.
[A] SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = "John Williams"

[Q] Show names for all employees who have certificate of Boeing 737-800.
[A] SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800"

[Q] Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.
[A] SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Airbus A340-300"

[Q] Show names for all employees who do not have certificate of Boeing 737-800.
[A] SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800"

[Q] Show the name of aircraft which fewest people have its certificate.
[A] SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY COUNT(*) DESC LIMIT 1

[Q] Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.
[A] SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid WHERE T2.distance > 5000 GROUP BY T1.aid ORDER BY COUNT(*) >= 5

[Q] what is the salary and name of the employee who has the most number of aircraft certificates?
[A] SELECT T1.name, T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1

[Q] What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?
[A] SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1

[Q] How many allergies are there?
[A] SELECT COUNT(DISTINCT allergy) FROM Allergy_type

[Q] How many different allergy types exist?
[A] SELECT COUNT(DISTINCT allergytype) FROM Allergy_type

[Q] Show all allergy types.
[A] SELECT DISTINCT allergytype FROM Allergy_type

[Q] Show all allergies and their types.
[A] SELECT allergy, allergytype FROM Allergy_type

[Q] Show all allergies with type food.
[A] SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype = "food"

[Q] What is the type of allergy Cat?
[A] SELECT allergytype FROM Allergy_type WHERE allergy = "Cat"

[Q] How many allergies have type animal?
[A] SELECT COUNT(*) FROM Allergy_type WHERE allergytype = "animal"

[Q] Show all allergy types and the number of allergies in each type.
[A] SELECT allergytype, COUNT(*) FROM Allergy_type GROUP BY allergytype

[Q] Which allergy type has most number of allergies?
[A] SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY COUNT(*) DESC LIMIT 1

[Q] Which allergy type has least number of allergies?
[A] SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY COUNT(*) LIMIT 1

[Q] How many students are there?
[A] SELECT COUNT(*) FROM Student

[Q] Show first name and last name for all students.
[A] SELECT Fname, Lname FROM Student

[Q] How many different advisors are listed?
[A] SELECT COUNT(DISTINCT advisor) FROM Student

[Q] Show all majors.
[A] SELECT DISTINCT Major FROM Student

[Q] Show all cities where students live.
[A] SELECT DISTINCT city_code FROM Student

[Q] Show first name, last name, age for all female students. Their sex is F.
[A] SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'

[Q] Show student ids for all male students.
[A] SELECT StuID FROM Student WHERE Sex = 'M'

[Q] How many students are age 18?
[A] SELECT COUNT(*) FROM Student WHERE age = 18

[Q] Show all student ids who are older than 20.
[A] SELECT StuID FROM Student WHERE age > 20

[Q] Which city does the student whose last name is "Kim" live in?
[A] SELECT city_code FROM Student WHERE LName = "Kim"

[Q] Who is the advisor of student with ID 1004?
[A] SELECT Advisor FROM Student WHERE StuID = 1004

[Q] How many students live in HKG or CHI?
[A] SELECT COUNT(*) FROM Student WHERE city_code = "HKG" OR city_code = "CHI"

[Q] Show the minimum, average, and maximum age of all students.
[A] SELECT MIN(age), AVG(age), MAX(age) FROM Student

[Q] What is the last name of the youngest student?
[A] SELECT LName FROM Student WHERE age = (SELECT MIN(age) FROM Student)

[Q] Show the student id of the oldest student.
[A] SELECT StuID FROM Student WHERE age = (SELECT MAX(age) FROM Student)

[Q] Show all majors and corresponding number of students.
[A] SELECT major, COUNT(*) FROM Student GROUP BY major

[Q] Which major has most number of students?
[A] SELECT major FROM Student GROUP BY major ORDER BY COUNT(*) DESC LIMIT 1

[Q] Show all ages and corresponding number of students.
[A] SELECT age, COUNT(*) FROM Student GROUP BY age

[Q] Show the average age for male and female students.
[A] SELECT AVG(age), sex FROM Student GROUP BY sex

[Q] Show all cities and corresponding number of students.
[A] SELECT city_code, COUNT(*) FROM Student GROUP BY city_code

[Q] Show all advisors and corresponding number of students.
[A] SELECT advisor, COUNT(*) FROM Student GROUP BY advisor

[Q] Which advisor has most number of students?
[A] SELECT advisor FROM Student GROUP BY advisor ORDER BY COUNT(*) DESC LIMIT 1

[Q] How many students have cat allergies?
[A] SELECT COUNT(*) FROM Has_allergy WHERE Allergy = "Cat"

[Q] Show all student IDs who have at least two allergies.
[A] SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2

[Q] What are the student ids of students who don't have any allergies?
[A] SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy

[Q] How many female students have milk or egg allergies?
[A] SELECT COUNT(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.sex = "F" AND T1.allergy = "Milk" OR T1.allergy = "Eggs"

[Q] How many students have a food allergy?
[A] SELECT COUNT(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = "food"

[Q] Which allergy has most number of students affected?
[A] SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1

[Q] Show all allergies with number of students affected.
[A] SELECT Allergy, COUNT(*) FROM Has_allergy GROUP BY Allergy

[Q] Show all allergy type with number of students affected.
[A] SELECT T2.allergytype, COUNT(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype

[Q] Find the last name and age of the student who has allergy to both milk and cat.
[A] SELECT lname, age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = "Milk" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = "Cat")

[Q] What are the allergies and their types that the student with first name Lisa has? And order the result by name of allergies.
[A] SELECT T1.Allergy, T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = "Lisa" ORDER BY T1.Allergy

[Q] Find the first name and gender of the student who has allergy to milk but not cat.
[A] SELECT fname, sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = "Milk" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy = "Cat")

[Q] Find the average age of the students who have allergies with food and animal types.
[A] SELECT AVG(age) FROM Student WHERE StuID IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "animal")

[Q] List the first and last name of the students who do not have any food type allergy.
[A] SELECT fname, lname FROM Student WHERE NOT StuID IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food")

[Q] Find the number of male (sex is 'M') students who have some food type allery.
[A] SELECT COUNT(*) FROM Student WHERE sex = "M" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food")

[Q] Find the different first names and cities of the students who have allergy to milk or cat.
[A] SELECT DISTINCT T1.fname, T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = "Milk" OR T2.Allergy = "Cat"

[Q] Find the number of students who are older than 18 and do not have allergy to either food or animal.
[A] SELECT COUNT(*) FROM Student WHERE age > 18 AND NOT StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" OR T2.allergytype = "animal")

[Q] Find the first name and major of the students who are not allegry to soy.
[A] SELECT fname, major FROM Student WHERE NOT StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = "Soy")

[Q] A list of the top 5 countries by number of invoices. List country name and number of invoices.
[A] SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5

[Q] A list of the top 8 countries by gross/total invoice size. List country name and gross invoice size.
[A] SELECT billing_country, SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8

[Q] A list of the top 10 countries by average invoice size. List country name and average invoice size.
[A] SELECT billing_country, AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10

[Q] Find out 5 customers who most recently purchased something. List customers' first and last name.
[A] SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5

[Q] Find out the top 10 customers by total number of orders. List customers' first and last name and the number of total orders.
[A] SELECT T1.first_name, T1.last_name, COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10

[Q] List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.
[A] SELECT T1.first_name, T1.last_name, SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10

[Q] List the top 5 genres by number of tracks. List genres name and total tracks.
[A] SELECT T1.name, COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 5

[Q] List every album's title.
[A] SELECT title FROM albums

[Q] List every album ordered by album title in ascending order.
[A] SELECT title FROM albums ORDER BY title

[Q] List every album whose title starts with A in alphabetical order.
[A] SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title

[Q] List the customers first and last name of 10 least expensive invoices.
[A] SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY total LIMIT 10

[Q] List total amount of  invoice from Chicago, IL.
[A] SELECT SUM(total) FROM invoices WHERE billing_city = "Chicago" AND billing_state = "IL"

[Q] List the number of invoices from Chicago, IL.
[A] SELECT COUNT(*) FROM invoices WHERE billing_city = "Chicago" AND billing_state = "IL"

[Q] List the number of invoices from the US, grouped by state.
[A] SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state

[Q] List the state in the US with the most invoices.
[A] SELECT billing_state, COUNT(*) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1

[Q] List the number of invoices and the invoice total from California.
[A] SELECT billing_state, COUNT(*), SUM(total) FROM invoices WHERE billing_state = "CA"

[Q] List Aerosmith's albums.
[A] SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = "Aerosmith"

[Q] How many albums does Billy Cobham has?
[A] SELECT COUNT(*) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = "Billy Cobham"

[Q] Eduardo Martins is a customer at which company?
[A] SELECT company FROM customers WHERE first_name = "Eduardo" AND last_name = "Martins"

[Q] What is Astrid Gruber's email and phone number?
[A] SELECT email, phone FROM customers WHERE first_name = "Astrid" AND last_name = "Gruber"

[Q] How many customers live in Prague city?
[A] SELECT COUNT(*) FROM customers WHERE city = "Prague"

[Q] How many customers in state of CA?
[A] SELECT COUNT(*) FROM customers WHERE state = "CA"

[Q] What country does Roberto Almeida live?
[A] SELECT country FROM customers WHERE first_name = "Roberto" AND last_name = "Almeida"

[Q] List the name of albums that are released by aritist whose name has 'Led'
[A] SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%'

[Q] How many customers does Steve Johnson support?
[A] SELECT COUNT(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = "Steve" AND T1.last_name = "Johnson"

[Q] What is the title, phone and hire date of Nancy Edwards?
[A] SELECT title, phone, hire_date FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards"

[Q] find the full name of employees who report to Nancy Edwards?
[A] SELECT T2.first_name, T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = "Nancy" AND T1.last_name = "Edwards"

[Q] What is the address of employee Nancy Edwards?
[A] SELECT address FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards"

[Q] Find the full name of employee who supported the most number of customers.
[A] SELECT T1.first_name, T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1

[Q] How many employees are living in Canada?
[A] SELECT COUNT(*) FROM employees WHERE country = "Canada"

[Q] What is employee Nancy Edwards's phone number?
[A] SELECT phone FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards"

[Q] Who is the youngest employee in the company? List employee's first and last name.
[A] SELECT first_name, last_name FROM employees ORDER BY birth_date DESC LIMIT 1

[Q] List top 10 employee work longest in the company. List employee's first and last name.
[A] SELECT first_name, last_name FROM employees ORDER BY hire_date LIMIT 10

[Q] Find the number of employees whose title is IT Staff from each city?
[A] SELECT COUNT(*), city FROM employees WHERE title = 'IT Staff' GROUP BY city
